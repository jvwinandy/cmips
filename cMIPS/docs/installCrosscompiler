###
### this file in NOT a shell script,
### yet it was written to make it easy for copying-n-pasting to the shell
###

# fetch all the auxiliary programs -- this assumes an Ubuntu installation

aptitude install make flex bison gcc g++

# clean up any aliases/function replacements for /bin/ls

unset ls

# make sure the installed files are read-exec by all

umask 022

# fetch binutils and gcc
# check the latest version of binutils in http://ftp.gnu.org/gnu/binutils
# check the latest version of GCC in http://ftp.gnu.org/gnu/gcc/

export BINUTILS=binutils-2.32
export COMPILER=gcc-7.4.0

wget -c http://ftp.gnu.org/gnu/binutils/${BINUTILS}.tar.bz2
wget -c http://ftp.gnu.org/gnu/gcc/${COMPILER}/${COMPILER}.tar.gz

# the cross-compiler will be installed in /opt/cross so it does not,
# in any way, conflicts with the native GCC or binutils.
#
# set the installation pathname as PREFIX so that {bin,lib,man} are put there
#   make sure you have write permission to /opt/cross,
#   else perform the "make install" steps as root (with umask 022)

export PREFIX=/some/other/path/if/you/are/not/root
export PREFIX=/opt/cross/
export TARGET=mips

## build and install binutils (takes a few minutes)

tar -xvjf ${BINUTILS}.tar.bz2
cd ${BINUTILS}
./configure --target=$TARGET --prefix=$PREFIX --disable-nls
make

# do the next one as root?  su ; umask 022 ; make install ; exit

make install
cd ..

## build and install GCC (takes several (>30) minutes)

tar -xvzf ${COMPILER}.tar.gz
cd ${COMPILER}

# run the script below to fetch the ancillary libraries

contrib/download_prerequisites --no-graphite

# configure the installation and build the compiler

export PATH=$PATH:$PREFIX/bin
./configure --target=$TARGET --prefix=$PREFIX --disable-nls \
     --disable-threads --disable-tls --disable-libsanitizer \
     --disable-libquadmath --disable-lto \
     --enable-languages=c,c++ --without-headers
make all-gcc

# do the next one as root?  su ; umask 022 ; make install-gcc ; exit

make install-gcc
cd ..


# once GCC and Binutils are compiled and installed, all that is needed is
#  for you to add the new path to your PATH, preferably in your ~/.bashrc
#  do not forget to substitute ${PREFIX} by /opt/cross in ~/.bashrc

export PATH=${PATH}:${PREFIX}/bin
export MANPATH=${MANPATH}:${PREFIX}/man


# and that ends the cross-compiler installation.



#
# To install ghdl on Ubuntu, use the ppa (thanks Todt):
#   https://launchpad.net/~gekkio/+archive/ubuntu/ghdl
#
# the compiler should work on Ubuntu cosmic, bionic and  LinuxMint 19.1

#sudo add-apt-repository ppa:gekkio/ghdl
#sudo apt-get update
#sudo apt-get install ghdl





#    This is very old, but may be useful.  After 20 years, I abandoned
#    Debian because installing  ghdl was a real pain.
#
# You may also want/need to install GHDL on your machine.  As of July,
#  2015, there is no official Debian package.  You must download the
#  unofficial package from Sourceforge at:
#    https://sourceforge.net/p/ghdl-updates/wiki/Debian%20Instructions/
#  and pick the appropriate version for your computer (32 or 64 bit).
#
# You also need to fetch gnat and libgnat from somewhere; I find it easier
#  to download the .deb files onto the same directory as ghdl*.deb
#
# When doing  dpkg -i ghdl*.deb  it will whine and complain about versions.
#  What I have done is to use the following RISKY command:
#
#  dpkg --ignore-depends=ghdl*.deb --ignore-depends=libgnat-4.6 -i ghdl*.deb
#
#  it forces dpkg to ignore the dependencies for GHDL and install it
#  with whatever version your machine has for gnat/libgnat.  Caveat emptor.
